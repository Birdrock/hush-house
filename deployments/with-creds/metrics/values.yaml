# Configuration for serving the metrics dashboards
# with TLS enabled.
tls:
  enabled: true
  ## Certificate
  # cert:
  ## Private key
  # key:


# Configuration for the prometheus dependency.
prometheus:
  enabled: true
  nodeExporter:
    enabled: true
  kubeStateMetrics:
    enabled: true
  pushgateway:
    enabled: false
  alertmanager:
    enabled: true
    affinity:
      nodeAffinity: &affinityToNonPreemptible
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: cloud.google.com/gke-preemptible
              operator: DoesNotExist
  serverFiles:
    prometheus.yml:
      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets:
              - localhost:9090

        - job_name: kubernetes-service-endpoints
          kubernetes_sd_configs: [{role: endpoints}]
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
              action: replace
              target_label: __address__
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_service_name]
              action: replace
              target_label: kubernetes_name
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: kubernetes_node
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: kubernetes_pod_name

        - job_name: kubernetes-nodes-cadvisor
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs: [{role: node}]
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor

        - job_name: kubernetes-nodes
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs: [{role: node}]
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$1/proxy/metrics

    rules:
      groups:
      - name: node-exporter-rules
        rules:
        - record: node:node_num_cpu:sum
          expr: count(node_cpu_seconds_total{mode="idle"}) without (cpu,mode)
  server:
    persistentVolume:
      enabled: true
      size: 30Gi
      storageClass: ssd
    affinity:
      nodeAffinity: *affinityToNonPreemptible
    resources:
      limits:
        cpu: 1500m
        memory: 4Gi
      requests:
        cpu: 1500m
        memory: 4Gi


# Configuration for the Grafana dependency.
grafana:
  enabled: true
  livenessProbe:
    httpGet:
      scheme: HTTPS
  readinessProbe:
    httpGet:
      scheme: HTTPS
  extraSecretMounts:
  - name: metrics-tls
    mountPath: /tls
    secretName: metrics-tls
    readOnly: true
  grafana.ini:
    server:
      protocol: https
      domain: metrics-hush-house.concourse-ci.org
      root_url: https://metrics-hush-house.concourse-ci.org
      cert_file: /tls/cert
      cert_key: /tls/key
    users:
      auto_assign_organization_role: Editor
    auth.anonymous:
      enabled: true
  service:
    loadBalancerIP: 35.202.14.65
    port: 443
    type: LoadBalancer
  sidecar:
    datasources:
      enabled: true
      label: grafana/datasource
    dashboards:
      enabled: true
      label: grafana/dashboard
